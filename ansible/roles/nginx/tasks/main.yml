---
- name: ensure sites-available for nginx
  file:
    path: /etc/nginx/sites-available
    state: directory
  become: true

- name: ensure there is an nginx user
  user:
    name: nginx
    comment: "Nginx user"
  become: true

- name: ensure sites-enable for nginx
  file:
    path: /etc/nginx/sites-enabled
    state: directory
  become: true

- name: remove default nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  become: true

- name: write nginx.conf
  template:
    src: nginx.conf
    dest: /etc/nginx/nginx.conf
  become: true

- name: enable nginx
  become: true
  service:
    name: nginx
    enabled: true

- name: create nginx site config
  template:
    src: "nginx_site.conf"
    dest: "/etc/nginx/sites-available/{{ item.app_name }}.conf"
  become: true
  with_items: nginx_hosts
  notify:
    - restart nginx

- import_tasks: ssl.yml
  when: development_server == true

- import_tasks: letsencrypt.yml
  when: development_server == false

- name: link nginx config
  file:
    src: "/etc/nginx/sites-available/{{ item.app_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.app_name }}.conf"
    state: link
  become: true
  with_items: nginx_hosts

- name: ensure nginx is restarted
  become: true
  service:
    name: nginx
    state: restarted
